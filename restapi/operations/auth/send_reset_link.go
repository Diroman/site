// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// SendResetLinkHandlerFunc turns a function with the right signature into a send reset link handler
type SendResetLinkHandlerFunc func(SendResetLinkParams) middleware.Responder

// Handle executing the request and returning a response
func (fn SendResetLinkHandlerFunc) Handle(params SendResetLinkParams) middleware.Responder {
	return fn(params)
}

// SendResetLinkHandler interface for that can handle valid send reset link params
type SendResetLinkHandler interface {
	Handle(SendResetLinkParams) middleware.Responder
}

// NewSendResetLink creates a new http.Handler for the send reset link operation
func NewSendResetLink(ctx *middleware.Context, handler SendResetLinkHandler) *SendResetLink {
	return &SendResetLink{Context: ctx, Handler: handler}
}

/* SendResetLink swagger:route POST /api/auth/send_reset_link auth sendResetLink

SendResetLink send reset link API

*/
type SendResetLink struct {
	Context *middleware.Context
	Handler SendResetLinkHandler
}

func (o *SendResetLink) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewSendResetLinkParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
