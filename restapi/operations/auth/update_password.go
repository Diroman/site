// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdatePasswordHandlerFunc turns a function with the right signature into a update password handler
type UpdatePasswordHandlerFunc func(UpdatePasswordParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdatePasswordHandlerFunc) Handle(params UpdatePasswordParams) middleware.Responder {
	return fn(params)
}

// UpdatePasswordHandler interface for that can handle valid update password params
type UpdatePasswordHandler interface {
	Handle(UpdatePasswordParams) middleware.Responder
}

// NewUpdatePassword creates a new http.Handler for the update password operation
func NewUpdatePassword(ctx *middleware.Context, handler UpdatePasswordHandler) *UpdatePassword {
	return &UpdatePassword{Context: ctx, Handler: handler}
}

/* UpdatePassword swagger:route POST /api/auth/update_password auth updatePassword

UpdatePassword update password API

*/
type UpdatePassword struct {
	Context *middleware.Context
	Handler UpdatePasswordHandler
}

func (o *UpdatePassword) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdatePasswordParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
