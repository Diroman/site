// Code generated by go-swagger; DO NOT EDIT.

package post

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"lawSite/models"
)

// AddNewMaterialsForPostOKCode is the HTTP code returned for type AddNewMaterialsForPostOK
const AddNewMaterialsForPostOKCode int = 200

/*AddNewMaterialsForPostOK successful operation

swagger:response addNewMaterialsForPostOK
*/
type AddNewMaterialsForPostOK struct {

	/*
	  In: Body
	*/
	Payload *models.ID `json:"body,omitempty"`
}

// NewAddNewMaterialsForPostOK creates AddNewMaterialsForPostOK with default headers values
func NewAddNewMaterialsForPostOK() *AddNewMaterialsForPostOK {

	return &AddNewMaterialsForPostOK{}
}

// WithPayload adds the payload to the add new materials for post o k response
func (o *AddNewMaterialsForPostOK) WithPayload(payload *models.ID) *AddNewMaterialsForPostOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add new materials for post o k response
func (o *AddNewMaterialsForPostOK) SetPayload(payload *models.ID) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNewMaterialsForPostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddNewMaterialsForPostBadRequestCode is the HTTP code returned for type AddNewMaterialsForPostBadRequest
const AddNewMaterialsForPostBadRequestCode int = 400

/*AddNewMaterialsForPostBadRequest Bad request

swagger:response addNewMaterialsForPostBadRequest
*/
type AddNewMaterialsForPostBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddNewMaterialsForPostBadRequest creates AddNewMaterialsForPostBadRequest with default headers values
func NewAddNewMaterialsForPostBadRequest() *AddNewMaterialsForPostBadRequest {

	return &AddNewMaterialsForPostBadRequest{}
}

// WithPayload adds the payload to the add new materials for post bad request response
func (o *AddNewMaterialsForPostBadRequest) WithPayload(payload *models.Error) *AddNewMaterialsForPostBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add new materials for post bad request response
func (o *AddNewMaterialsForPostBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNewMaterialsForPostBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddNewMaterialsForPostUnauthorizedCode is the HTTP code returned for type AddNewMaterialsForPostUnauthorized
const AddNewMaterialsForPostUnauthorizedCode int = 401

/*AddNewMaterialsForPostUnauthorized not valid token

swagger:response addNewMaterialsForPostUnauthorized
*/
type AddNewMaterialsForPostUnauthorized struct {
}

// NewAddNewMaterialsForPostUnauthorized creates AddNewMaterialsForPostUnauthorized with default headers values
func NewAddNewMaterialsForPostUnauthorized() *AddNewMaterialsForPostUnauthorized {

	return &AddNewMaterialsForPostUnauthorized{}
}

// WriteResponse to the client
func (o *AddNewMaterialsForPostUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// AddNewMaterialsForPostForbiddenCode is the HTTP code returned for type AddNewMaterialsForPostForbidden
const AddNewMaterialsForPostForbiddenCode int = 403

/*AddNewMaterialsForPostForbidden Forbidden

swagger:response addNewMaterialsForPostForbidden
*/
type AddNewMaterialsForPostForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddNewMaterialsForPostForbidden creates AddNewMaterialsForPostForbidden with default headers values
func NewAddNewMaterialsForPostForbidden() *AddNewMaterialsForPostForbidden {

	return &AddNewMaterialsForPostForbidden{}
}

// WithPayload adds the payload to the add new materials for post forbidden response
func (o *AddNewMaterialsForPostForbidden) WithPayload(payload *models.Error) *AddNewMaterialsForPostForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add new materials for post forbidden response
func (o *AddNewMaterialsForPostForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNewMaterialsForPostForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddNewMaterialsForPostInternalServerErrorCode is the HTTP code returned for type AddNewMaterialsForPostInternalServerError
const AddNewMaterialsForPostInternalServerErrorCode int = 500

/*AddNewMaterialsForPostInternalServerError Server error

swagger:response addNewMaterialsForPostInternalServerError
*/
type AddNewMaterialsForPostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddNewMaterialsForPostInternalServerError creates AddNewMaterialsForPostInternalServerError with default headers values
func NewAddNewMaterialsForPostInternalServerError() *AddNewMaterialsForPostInternalServerError {

	return &AddNewMaterialsForPostInternalServerError{}
}

// WithPayload adds the payload to the add new materials for post internal server error response
func (o *AddNewMaterialsForPostInternalServerError) WithPayload(payload *models.Error) *AddNewMaterialsForPostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add new materials for post internal server error response
func (o *AddNewMaterialsForPostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNewMaterialsForPostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
