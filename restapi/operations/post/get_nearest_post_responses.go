// Code generated by go-swagger; DO NOT EDIT.

package post

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"lawSite/models"
)

// GetNearestPostOKCode is the HTTP code returned for type GetNearestPostOK
const GetNearestPostOKCode int = 200

/*GetNearestPostOK successful operation

swagger:response getNearestPostOK
*/
type GetNearestPostOK struct {

	/*
	  In: Body
	*/
	Payload *models.Post `json:"body,omitempty"`
}

// NewGetNearestPostOK creates GetNearestPostOK with default headers values
func NewGetNearestPostOK() *GetNearestPostOK {

	return &GetNearestPostOK{}
}

// WithPayload adds the payload to the get nearest post o k response
func (o *GetNearestPostOK) WithPayload(payload *models.Post) *GetNearestPostOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get nearest post o k response
func (o *GetNearestPostOK) SetPayload(payload *models.Post) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNearestPostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNearestPostBadRequestCode is the HTTP code returned for type GetNearestPostBadRequest
const GetNearestPostBadRequestCode int = 400

/*GetNearestPostBadRequest Invalid status value

swagger:response getNearestPostBadRequest
*/
type GetNearestPostBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNearestPostBadRequest creates GetNearestPostBadRequest with default headers values
func NewGetNearestPostBadRequest() *GetNearestPostBadRequest {

	return &GetNearestPostBadRequest{}
}

// WithPayload adds the payload to the get nearest post bad request response
func (o *GetNearestPostBadRequest) WithPayload(payload *models.Error) *GetNearestPostBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get nearest post bad request response
func (o *GetNearestPostBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNearestPostBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNearestPostInternalServerErrorCode is the HTTP code returned for type GetNearestPostInternalServerError
const GetNearestPostInternalServerErrorCode int = 500

/*GetNearestPostInternalServerError Internal server error

swagger:response getNearestPostInternalServerError
*/
type GetNearestPostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNearestPostInternalServerError creates GetNearestPostInternalServerError with default headers values
func NewGetNearestPostInternalServerError() *GetNearestPostInternalServerError {

	return &GetNearestPostInternalServerError{}
}

// WithPayload adds the payload to the get nearest post internal server error response
func (o *GetNearestPostInternalServerError) WithPayload(payload *models.Error) *GetNearestPostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get nearest post internal server error response
func (o *GetNearestPostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNearestPostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
