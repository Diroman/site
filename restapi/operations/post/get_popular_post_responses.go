// Code generated by go-swagger; DO NOT EDIT.

package post

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"lawSite/models"
)

// GetPopularPostOKCode is the HTTP code returned for type GetPopularPostOK
const GetPopularPostOKCode int = 200

/*GetPopularPostOK successful operation

swagger:response getPopularPostOK
*/
type GetPopularPostOK struct {

	/*
	  In: Body
	*/
	Payload *models.PostList `json:"body,omitempty"`
}

// NewGetPopularPostOK creates GetPopularPostOK with default headers values
func NewGetPopularPostOK() *GetPopularPostOK {

	return &GetPopularPostOK{}
}

// WithPayload adds the payload to the get popular post o k response
func (o *GetPopularPostOK) WithPayload(payload *models.PostList) *GetPopularPostOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get popular post o k response
func (o *GetPopularPostOK) SetPayload(payload *models.PostList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPopularPostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPopularPostBadRequestCode is the HTTP code returned for type GetPopularPostBadRequest
const GetPopularPostBadRequestCode int = 400

/*GetPopularPostBadRequest Invalid status value

swagger:response getPopularPostBadRequest
*/
type GetPopularPostBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPopularPostBadRequest creates GetPopularPostBadRequest with default headers values
func NewGetPopularPostBadRequest() *GetPopularPostBadRequest {

	return &GetPopularPostBadRequest{}
}

// WithPayload adds the payload to the get popular post bad request response
func (o *GetPopularPostBadRequest) WithPayload(payload *models.Error) *GetPopularPostBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get popular post bad request response
func (o *GetPopularPostBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPopularPostBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
