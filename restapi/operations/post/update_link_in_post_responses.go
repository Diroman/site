// Code generated by go-swagger; DO NOT EDIT.

package post

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"lawSite/models"
)

// UpdateLinkInPostOKCode is the HTTP code returned for type UpdateLinkInPostOK
const UpdateLinkInPostOKCode int = 200

/*UpdateLinkInPostOK successful operation

swagger:response updateLinkInPostOK
*/
type UpdateLinkInPostOK struct {
}

// NewUpdateLinkInPostOK creates UpdateLinkInPostOK with default headers values
func NewUpdateLinkInPostOK() *UpdateLinkInPostOK {

	return &UpdateLinkInPostOK{}
}

// WriteResponse to the client
func (o *UpdateLinkInPostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// UpdateLinkInPostBadRequestCode is the HTTP code returned for type UpdateLinkInPostBadRequest
const UpdateLinkInPostBadRequestCode int = 400

/*UpdateLinkInPostBadRequest Bad request

swagger:response updateLinkInPostBadRequest
*/
type UpdateLinkInPostBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateLinkInPostBadRequest creates UpdateLinkInPostBadRequest with default headers values
func NewUpdateLinkInPostBadRequest() *UpdateLinkInPostBadRequest {

	return &UpdateLinkInPostBadRequest{}
}

// WithPayload adds the payload to the update link in post bad request response
func (o *UpdateLinkInPostBadRequest) WithPayload(payload *models.Error) *UpdateLinkInPostBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update link in post bad request response
func (o *UpdateLinkInPostBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLinkInPostBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateLinkInPostInternalServerErrorCode is the HTTP code returned for type UpdateLinkInPostInternalServerError
const UpdateLinkInPostInternalServerErrorCode int = 500

/*UpdateLinkInPostInternalServerError Server error

swagger:response updateLinkInPostInternalServerError
*/
type UpdateLinkInPostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateLinkInPostInternalServerError creates UpdateLinkInPostInternalServerError with default headers values
func NewUpdateLinkInPostInternalServerError() *UpdateLinkInPostInternalServerError {

	return &UpdateLinkInPostInternalServerError{}
}

// WithPayload adds the payload to the update link in post internal server error response
func (o *UpdateLinkInPostInternalServerError) WithPayload(payload *models.Error) *UpdateLinkInPostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update link in post internal server error response
func (o *UpdateLinkInPostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLinkInPostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
