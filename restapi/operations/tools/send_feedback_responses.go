// Code generated by go-swagger; DO NOT EDIT.

package tools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"lawSite/models"
)

// SendFeedbackOKCode is the HTTP code returned for type SendFeedbackOK
const SendFeedbackOKCode int = 200

/*SendFeedbackOK successful operation

swagger:response sendFeedbackOK
*/
type SendFeedbackOK struct {
}

// NewSendFeedbackOK creates SendFeedbackOK with default headers values
func NewSendFeedbackOK() *SendFeedbackOK {

	return &SendFeedbackOK{}
}

// WriteResponse to the client
func (o *SendFeedbackOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SendFeedbackBadRequestCode is the HTTP code returned for type SendFeedbackBadRequest
const SendFeedbackBadRequestCode int = 400

/*SendFeedbackBadRequest Bad request

swagger:response sendFeedbackBadRequest
*/
type SendFeedbackBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSendFeedbackBadRequest creates SendFeedbackBadRequest with default headers values
func NewSendFeedbackBadRequest() *SendFeedbackBadRequest {

	return &SendFeedbackBadRequest{}
}

// WithPayload adds the payload to the send feedback bad request response
func (o *SendFeedbackBadRequest) WithPayload(payload *models.Error) *SendFeedbackBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send feedback bad request response
func (o *SendFeedbackBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendFeedbackBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SendFeedbackInternalServerErrorCode is the HTTP code returned for type SendFeedbackInternalServerError
const SendFeedbackInternalServerErrorCode int = 500

/*SendFeedbackInternalServerError Server error

swagger:response sendFeedbackInternalServerError
*/
type SendFeedbackInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSendFeedbackInternalServerError creates SendFeedbackInternalServerError with default headers values
func NewSendFeedbackInternalServerError() *SendFeedbackInternalServerError {

	return &SendFeedbackInternalServerError{}
}

// WithPayload adds the payload to the send feedback internal server error response
func (o *SendFeedbackInternalServerError) WithPayload(payload *models.Error) *SendFeedbackInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send feedback internal server error response
func (o *SendFeedbackInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendFeedbackInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
