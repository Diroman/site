// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"lawSite/models"
)

// UserPostsDeleteOKCode is the HTTP code returned for type UserPostsDeleteOK
const UserPostsDeleteOKCode int = 200

/*UserPostsDeleteOK successful operation

swagger:response userPostsDeleteOK
*/
type UserPostsDeleteOK struct {
}

// NewUserPostsDeleteOK creates UserPostsDeleteOK with default headers values
func NewUserPostsDeleteOK() *UserPostsDeleteOK {

	return &UserPostsDeleteOK{}
}

// WriteResponse to the client
func (o *UserPostsDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// UserPostsDeleteBadRequestCode is the HTTP code returned for type UserPostsDeleteBadRequest
const UserPostsDeleteBadRequestCode int = 400

/*UserPostsDeleteBadRequest Bad request

swagger:response userPostsDeleteBadRequest
*/
type UserPostsDeleteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUserPostsDeleteBadRequest creates UserPostsDeleteBadRequest with default headers values
func NewUserPostsDeleteBadRequest() *UserPostsDeleteBadRequest {

	return &UserPostsDeleteBadRequest{}
}

// WithPayload adds the payload to the user posts delete bad request response
func (o *UserPostsDeleteBadRequest) WithPayload(payload *models.Error) *UserPostsDeleteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user posts delete bad request response
func (o *UserPostsDeleteBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserPostsDeleteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserPostsDeleteUnauthorizedCode is the HTTP code returned for type UserPostsDeleteUnauthorized
const UserPostsDeleteUnauthorizedCode int = 401

/*UserPostsDeleteUnauthorized not valid token

swagger:response userPostsDeleteUnauthorized
*/
type UserPostsDeleteUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUserPostsDeleteUnauthorized creates UserPostsDeleteUnauthorized with default headers values
func NewUserPostsDeleteUnauthorized() *UserPostsDeleteUnauthorized {

	return &UserPostsDeleteUnauthorized{}
}

// WithPayload adds the payload to the user posts delete unauthorized response
func (o *UserPostsDeleteUnauthorized) WithPayload(payload *models.Error) *UserPostsDeleteUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user posts delete unauthorized response
func (o *UserPostsDeleteUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserPostsDeleteUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserPostsDeleteInternalServerErrorCode is the HTTP code returned for type UserPostsDeleteInternalServerError
const UserPostsDeleteInternalServerErrorCode int = 500

/*UserPostsDeleteInternalServerError Server error

swagger:response userPostsDeleteInternalServerError
*/
type UserPostsDeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUserPostsDeleteInternalServerError creates UserPostsDeleteInternalServerError with default headers values
func NewUserPostsDeleteInternalServerError() *UserPostsDeleteInternalServerError {

	return &UserPostsDeleteInternalServerError{}
}

// WithPayload adds the payload to the user posts delete internal server error response
func (o *UserPostsDeleteInternalServerError) WithPayload(payload *models.Error) *UserPostsDeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user posts delete internal server error response
func (o *UserPostsDeleteInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserPostsDeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
